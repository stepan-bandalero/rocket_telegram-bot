from aiogram import F, Router
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select

from bot.config import settings
from bot.db import SessionLocal
from bot.models.users import User
from bot.models.user_transaction import UserTransaction  # ‚úÖ –º–æ–¥–µ–ª—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
import re

router = Router()


@router.message(F.text.startswith("/manage_balance"))
async def manage_balance(message: Message):
    if message.from_user.id not in settings.admins:
        return

    parts = message.text.split()
    if len(parts) != 4:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.\n\n"
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n"
            "<code>/manage_balance &lt;ID&gt; &lt; +/-/= &gt; &lt;–°—É–º–º–∞&gt;</code>",
            parse_mode="HTML",
        )
        return

    _, user_id_str, operator, amount_str = parts

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ ID
    if not user_id_str.isdigit():
        await message.answer("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
        return

    user_id = int(user_id_str)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    if operator not in ["+", "-", "="]:
        await message.answer("‚ùå –û–ø–µ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: +  -  =")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º—ã
    if not re.match(r"^\d+$", amount_str):
        await message.answer("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
        return

    amount = int(amount_str)
    if amount < 0:
        await message.answer("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.")
        return

    async with SessionLocal() as session:
        user = await session.get(User, user_id)
        if not user:
            await message.answer(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID <code>{user_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω.", parse_mode="HTML")
            return

        old_balance = user.ton_balance or 0

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        if operator == "+":
            new_balance = old_balance + amount
        elif operator == "-":
            if old_balance < amount:
                await message.answer(
                    f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤. –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>{old_balance}</b> TON.",
                    parse_mode="HTML",
                )
                return
            new_balance = old_balance - amount
        else:  # "="
            new_balance = amount

        user.ton_balance = new_balance


        await session.commit()

    await message.answer(
        f"‚úÖ –ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª—ë–Ω!\n\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <code>{user_id}</code>\n"
        f"üí∞ –ë—ã–ª–æ: <b>{old_balance}</b>\n"
        f"üîÑ –°—Ç–∞–ª–æ: <b>{new_balance}</b>\n"
        f"‚úçÔ∏è –û–ø–µ—Ä–∞—Ü–∏—è: {operator} {amount}",
        parse_mode="HTML",
    )
