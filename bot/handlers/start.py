from aiogram import Router, F, Bot
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from bot.models.users import User
from bot.services.referral import process_referral
from bot.services.subscriptions import check_subscriptions
from bot.utils.keyboards import get_subscription_keyboard

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, bot: Bot, session: AsyncSession):
    args = message.text.split(maxsplit=1)
    payload = args[1] if len(args) > 1 else None

    user = await session.get(User, message.from_user.id)

    if not user:
        # –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = User(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
        )
        session.add(user)
        await session.flush()

        ref_type, ref_value = await process_referral(session, user, payload)

        await session.commit()

        text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üéâ\n–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ."
    else:
        text = "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º üëã"

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    not_subscribed = await check_subscriptions(session, bot, message.from_user.id)
    if not_subscribed:
        kb = get_subscription_keyboard(not_subscribed)
        await message.answer(
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã:",
            reply_markup=kb,
        )
        return

    await message.answer(text)







@router.callback_query(F.data == "check_subs")
async def cb_check_subs(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    user_id = callback.from_user.id
    not_subscribed = await check_subscriptions(session, bot, user_id)

    if not_subscribed:
        kb = get_subscription_keyboard(not_subscribed)
        await callback.message.edit_text(
            "‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–æ–≤–∞:",
            reply_markup=kb,
        )
    else:
        user = await session.get(User, user_id)
        text = f"‚úÖ –û—Ç–ª–∏—á–Ω–æ, {user.first_name or '–¥—Ä—É–≥'}!\n–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é."
        await callback.message.edit_text(text)
        # —Ç—É—Ç –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
