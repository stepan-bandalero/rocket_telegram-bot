from aiogram import Router, F, Bot
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from bot.models.users import User
from bot.services.referral import process_referral
from bot.services.subscriptions import check_subscriptions
from bot.utils.keyboards import get_subscription_keyboard

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ó–∞–ø—É—Å—Ç–∏—Ç—å"
        [InlineKeyboardButton(text="‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å", url="https://rocket-app.top")],
        # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ - –¥–≤–µ –∫–Ω–æ–ø–∫–∏
        [
            InlineKeyboardButton(text="üìó –û—Ç–∑—ã–≤—ã", url="https://t.me/rocket_gift"),
            InlineKeyboardButton(text="üë©üèº‚Äçüíª –ú–µ–Ω–µ–¥–∂–µ—Ä", url="https://t.me/GiftsToRocket")
        ]
    ]
)

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, bot: Bot, session: AsyncSession):
    args = message.text.split(maxsplit=1)
    payload = args[1] if len(args) > 1 else None

    user = await session.get(User, message.from_user.id)

    if not user:
        # –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user = User(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
        )
        session.add(user)
        await session.flush()
        await session.commit()


    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    not_subscribed = await check_subscriptions(session, bot, message.from_user.id)
    if not_subscribed:
        kb = get_subscription_keyboard(not_subscribed)
        await message.answer_photo(
            photo="https://i.ibb.co/YFFsrwW3/5678867.jpg",
            caption="üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ROCKET!\n\n –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</b> –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–º–∏—Ç–µ <b>¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å¬ª.</b>",
            reply_markup=kb
        )
        return

    await message.answer_photo(
        photo="https://i.ibb.co/M59wqfSj/IMG-4720.jpg",
        caption="<b>ROCKET</b> ‚Äî –ü–µ—Ä–≤–∞—è <b>NFT –∫—Ä–∞—à –∏–≥—Ä–∞</b> —Å —Ç—ã—Å—è—á–∞–º–∏ <b>–ø–æ–¥–∞—Ä–∫–æ–≤</b> –≤ <b>Telegram!</b> \n\n"
                "ü™ô <b>–°—Ç–µ–π–∫–∏–Ω–≥, —Ç—É—Ä–Ω–∏—Ä—ã, –¥—Ä–æ–ø—ã</b> —Å –±–æ–Ω—É—Å–∞–º–∏ –∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ <b>NFT</b> –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n"
                "üéÅ –ë–æ–ª–µ–µ <b>5000 NFT –ø–æ–¥–∞—Ä–∫–æ–≤</b> —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º <b>ROCKET</b>\n\n"
                "–°–∫–æ—Ä–µ–µ –∂–º–∏ –∫–Ω–æ–ø–∫—É <b>¬´–ó–∞–ø—É—Å—Ç–∏—Ç—å¬ª</b>",
        reply_markup=keyboard
    )






@router.callback_query(F.data == "check_subs")
async def cb_check_subs(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    user_id = callback.from_user.id
    not_subscribed = await check_subscriptions(session, bot, user_id)

    if not_subscribed:
        kb = get_subscription_keyboard(not_subscribed)
        await callback.message.edit_text(
            "‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–æ–≤–∞:",
            reply_markup=kb,
        )
    else:
        user = await session.get(User, user_id)
        text = f"‚úÖ –û—Ç–ª–∏—á–Ω–æ, {user.first_name or '–¥—Ä—É–≥'}!\n–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é."
        await callback.message.edit_text(text)
        # —Ç—É—Ç –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
